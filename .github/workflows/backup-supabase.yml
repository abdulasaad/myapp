name: Supabase Backup to OneDrive

on:
  schedule:
    # Daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

env:
  SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

jobs:
  backup-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: chmod +x .github/scripts/*.sh

      - name: Run database backup
        run: .github/scripts/backup-database-api.sh

      - name: Upload database backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-backup
          path: database-backup-*.tar.gz
          retention-days: 1

  backup-storage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Make scripts executable
        run: chmod +x .github/scripts/*.sh

      - name: Run storage backup
        run: .github/scripts/backup-storage.sh

      - name: Upload storage backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: storage-backup
          path: storage-backup-*.tar.gz
          retention-days: 1

  upload-to-onedrive:
    needs: [backup-database, backup-storage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Test OneDrive access
        run: python .github/scripts/test-onedrive-access.py

      - name: Download database backup
        uses: actions/download-artifact@v4
        with:
          name: database-backup

      - name: Download storage backup
        uses: actions/download-artifact@v4
        with:
          name: storage-backup

      - name: Upload to OneDrive
        run: python .github/scripts/upload-to-onedrive.py

  notify:
    needs: upload-to-onedrive
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification
        run: |
          if [ "${{ needs.upload-to-onedrive.result }}" == "success" ]; then
            echo "✅ Backup completed successfully"
          else
            echo "❌ Backup failed - check logs"
          fi